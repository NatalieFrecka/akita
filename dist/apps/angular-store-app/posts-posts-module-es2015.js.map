{"version":3,"sources":["./apps/angular-store-app/src/app/posts/state/posts.query.ts","./apps/angular-store-app/src/app/posts/state/posts.store.ts","./apps/angular-store-app/src/app/posts/state/index.ts","./apps/angular-store-app/src/app/posts/posts.module.ts","./apps/angular-store-app/src/app/posts/posts.component.ts","./apps/angular-store-app/src/app/posts/posts.component.html","./apps/angular-store-app/src/app/posts/state/post.effects.ts","./apps/angular-store-app/src/app/posts/state/posts.service.ts"],"names":[],"mappings":"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","file":"posts-posts-module-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { QueryEntity } from '@datorama/akita';\nimport { PostsStore, PostsState } from './posts.store';\n\n@Injectable({ providedIn: 'root' })\nexport class PostsQuery extends QueryEntity<PostsState> {\n\n  constructor(protected store: PostsStore) {\n    super(store);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { EntityState, EntityStore, StoreConfig } from '@datorama/akita';\nimport { Post } from './post.model';\n\nexport interface PostsState extends EntityState<Post, number> {}\n\n@Injectable({ providedIn: 'root' })\n@StoreConfig({ name: 'posts' })\nexport class PostsStore extends EntityStore<PostsState> {\n\n  constructor() {\n    super();\n  }\n\n}\n\n","export * from './posts.query';\nexport * from './posts.store';\nexport * from './posts.service';\nexport * from './post.model';\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PostsComponent } from './posts.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AkitaNgEffectsModule } from '@datorama/akita-ng-effects';\nimport { PostEffects } from './state/post.effects';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PostsComponent,\n  },\n];\n\n@NgModule({\n  declarations: [PostsComponent],\n  imports: [CommonModule, RouterModule.forChild(routes), AkitaNgEffectsModule.forFeature([PostEffects])],\n})\nexport class PostsModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { filterMethod, NgEntityServiceLoader, NgEntityServiceNotifier, ofType } from '@datorama/akita-ng-entity-service';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { memo } from 'helpful-decorators';\nimport { PostsQuery, PostsService } from './state';\n\n@UntilDestroy()\n@Component({\n  templateUrl: './posts.component.html',\n  styleUrls: ['./posts.css'],\n})\nexport class PostsComponent implements OnInit {\n  posts$ = this.postsQuery.selectAll();\n  loaders = this.loader.loadersFor();\n\n  constructor(private postsQuery: PostsQuery, private postsService: PostsService, private loader: NgEntityServiceLoader, private notifier: NgEntityServiceNotifier) {}\n\n  ngOnInit() {\n    this.notifier.action$.pipe(ofType('success'), filterMethod('DELETE'), untilDestroyed(this)).subscribe((v) => console.log(v));\n\n    this.postsService\n      .get({\n        mapResponseFn: (res) => {\n          return res;\n        },\n      })\n      .subscribe();\n    this.loaders.deleteEntity(3);\n  }\n\n  fetchOne() {\n    this.postsService.get(1).subscribe(console.log);\n  }\n\n  add() {\n    this.postsService.add({ id: 1222, title: 'New Post', body: '' }, { prepend: true }).subscribe();\n  }\n\n  update(id) {\n    this.postsService.update(id, { title: 'New title' }).subscribe();\n  }\n\n  remove(id) {\n    this.postsService\n      .delete(id, {\n        successMsg: 'Deleted Successfully',\n      })\n      .subscribe();\n  }\n\n  @memo()\n  updateEntityLoading(id) {\n    return this.loaders.updateEntity(id);\n  }\n\n  @memo()\n  deleteEntityLoading(id) {\n    return this.loaders.deleteEntity(id);\n  }\n\n  ngOnDestroy() {}\n}\n","<div class=\"container\" class=\"padding\">\n  <h1>Entity Service</h1>\n\n  <ng-template #idle>Idle</ng-template>\n\n  <h5>Loaders</h5>\n  <p>Get => <span *ngIf=\"(loaders.get$ | async); else idle\">Loading...</span></p>\n  <p>POST => <span *ngIf=\"(loaders.add$ | async); else idle\">Loading...</span></p>\n  <p>PUT => <span *ngIf=\"(loaders.update$ | async); else idle\">Loading...</span></p>\n  <p>DELETE => <span *ngIf=\"(loaders.delete$ | async); else idle\">Loading...</span></p>\n\n  <p>PUT id 3 => <span *ngIf=\"updateEntityLoading(3) | async; else idle\">Loading...</span></p>\n  <p>DELETE id 3 => <span *ngIf=\"deleteEntityLoading(3) | async; else idle\">Loading...</span></p>\n\n  <section style=\"margin-bottom: 10px;\">\n    <button (click)=\"fetchOne()\" class=\"btn waves-effect waves-light\">Fetch posts/1</button>\n    <button (click)=\"add()\" class=\"btn waves-effect waves-light\">Add</button>\n    <button (click)=\"update(1)\" class=\"btn waves-effect waves-light\">Update</button>\n    <button (click)=\"remove(1)\" class=\"btn waves-effect waves-light\">Remove</button>\n\n    <button (click)=\"update(3)\" class=\"btn waves-effect waves-light\">Update id 3</button>\n    <button (click)=\"remove(3)\" class=\"btn waves-effect waves-light\">Remove id 3</button>\n  </section>\n\n  <h3 *ngIf=\"(loaders.get$ | async); else posts\">Loading...</h3>\n\n  <ng-template #posts>\n    <div *ngFor=\"let post of (posts$ | async)\">\n      {{ post.title }}\n    </div>\n  </ng-template>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect } from '@datorama/akita-ng-effects';\nimport { PostsStore } from './posts.store';\nimport { tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PostEffects {\n  constructor(private actions$: Actions, private postStore: PostsStore) {}\n\n  @Effect({ dispatch: false })\n  allActionsPost = this.actions$.pipe(tap((action) => console.log('post effect', action)));\n}\n","import { Injectable } from '@angular/core';\nimport { PostsState, PostsStore } from './posts.store';\nimport { NgEntityService } from '@datorama/akita-ng-entity-service';\n\n@Injectable({ providedIn: 'root' })\nexport class PostsService extends NgEntityService<PostsState> {\n  constructor(protected store: PostsStore) {\n    super(store);\n  }\n}\n"],"sourceRoot":"webpack:///"}