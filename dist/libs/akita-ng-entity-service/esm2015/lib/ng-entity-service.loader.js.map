{"version":3,"file":"ng-entity-service.loader.js","sourceRoot":"ng://@datorama/akita-ng-entity-service/","sources":["lib/ng-entity-service.loader.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAC;AAC7C,OAAO,EAAE,aAAa,EAAE,MAAM,MAAM,CAAC;AACrC,OAAO,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,gBAAgB,CAAC;AAC7C,OAAO,EAAE,UAAU,EAAE,MAAM,8BAA8B,CAAC;;AAK1D,MAAM,OAAO,qBAAqB;IADlC;QAEU,eAAU,GAAG,IAAI,aAAa,CAAQ,CAAC,CAAC,CAAC;QACjD,aAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC;KAsC3C;IApCC,QAAQ,CAAC,KAAY;QACnB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAC;IAED,UAAU,CAAC,IAAa;QACtB,MAAM,WAAW,GAAG,MAAM,CAAC,CAAC,EAAE,SAAS,EAAS,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,KAAK,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;QACzF,MAAM,YAAY,GAAG,CAAC,IAAI,EAAE,EAAE,CAC5B,MAAM,CAAC,CAAC,EAAE,MAAM,EAAS,EAAE,EAAE;YAC3B,OAAO,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC;QAC3D,CAAC,CAAC,CAAC;QAEL,MAAM,WAAW,GAAG,CAAC,OAA2C,EAAE,EAAE,CAClE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAChB,WAAW,EACX,YAAY,CAAC,OAAO,CAAC,EACrB,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,CAChC,CAAC;QAEJ,MAAM,OAAO,GAAG,CAAC,EAAO,EAAE,IAAwC,EAAE,EAAE,CACpE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAChB,WAAW,EACX,YAAY,CAAC,IAAI,CAAC,EAClB,MAAM,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,QAAQ,KAAK,EAAE,CAAC,EAC1C,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,CAChC,CAAC;QAEJ,OAAO;YACL,IAAI,EAAE,WAAW,CAAC,UAAU,CAAC,GAAG,CAAC;YACjC,IAAI,EAAE,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC;YAClC,OAAO,EAAE,WAAW,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,KAAK,UAAU,CAAC,GAAG,IAAI,MAAM,KAAK,UAAU,CAAC,KAAK,CAAC;YAC1F,OAAO,EAAE,WAAW,CAAC,UAAU,CAAC,MAAM,CAAC;YACvC,SAAS,EAAE,CAAC,EAAO,EAAE,EAAE,CAAC,OAAO,CAAC,EAAE,EAAE,UAAU,CAAC,GAAG,CAAC;YACnD,YAAY,EAAE,CAAC,EAAO,EAAE,EAAE,CAAC,OAAO,CAAC,EAAE,EAAE,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,KAAK,UAAU,CAAC,GAAG,IAAI,MAAM,KAAK,UAAU,CAAC,KAAK,CAAC;YAC5G,YAAY,EAAE,CAAC,EAAO,EAAE,EAAE,CAAC,OAAO,CAAC,EAAE,EAAE,UAAU,CAAC,MAAM,CAAC;SAC1D,CAAC;IACJ,CAAC;;0FAvCU,qBAAqB;6DAArB,qBAAqB,WAArB,qBAAqB,mBADR,MAAM;kDACnB,qBAAqB;cADjC,UAAU;eAAC,EAAE,UAAU,EAAE,MAAM,EAAE","sourcesContent":["import { Injectable } from '@angular/core';\nimport { isFunction } from '@datorama/akita';\nimport { ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { HttpMethod } from './ng-entity-service-notifier';\n\nexport type Event = { method: HttpMethod; loading: boolean; storeName: string; entityId?: any };\n\n@Injectable({ providedIn: 'root' })\nexport class NgEntityServiceLoader {\n  private dispatcher = new ReplaySubject<Event>(1);\n  loading$ = this.dispatcher.asObservable();\n\n  dispatch(event: Event) {\n    this.dispatcher.next(event);\n  }\n\n  loadersFor(name?: string) {\n    const filterStore = filter(({ storeName }: Event) => (name ? storeName === name : true));\n    const filterMethod = (mthd) =>\n      filter(({ method }: Event) => {\n        return isFunction(mthd) ? mthd(method) : method === mthd;\n      });\n\n    const actionBased = (current: ((method) => boolean) | HttpMethod) =>\n      this.loading$.pipe(\n        filterStore,\n        filterMethod(current),\n        map((action) => action.loading)\n      );\n\n    const idBased = (id: any, mthd: ((method) => boolean) | HttpMethod) =>\n      this.loading$.pipe(\n        filterStore,\n        filterMethod(mthd),\n        filter((action) => action.entityId === id),\n        map((action) => action.loading)\n      );\n\n    return {\n      get$: actionBased(HttpMethod.GET),\n      add$: actionBased(HttpMethod.POST),\n      update$: actionBased((method) => method === HttpMethod.PUT || method === HttpMethod.PATCH),\n      delete$: actionBased(HttpMethod.DELETE),\n      getEntity: (id: any) => idBased(id, HttpMethod.GET),\n      updateEntity: (id: any) => idBased(id, (method) => method === HttpMethod.PUT || method === HttpMethod.PATCH),\n      deleteEntity: (id: any) => idBased(id, HttpMethod.DELETE),\n    };\n  }\n}\n"]}