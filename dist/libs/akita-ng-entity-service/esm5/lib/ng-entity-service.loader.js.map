{"version":3,"file":"ng-entity-service.loader.js","sourceRoot":"ng://@datorama/akita-ng-entity-service/","sources":["lib/ng-entity-service.loader.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAC;AAC7C,OAAO,EAAE,aAAa,EAAE,MAAM,MAAM,CAAC;AACrC,OAAO,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,gBAAgB,CAAC;AAC7C,OAAO,EAAE,UAAU,EAAE,MAAM,8BAA8B,CAAC;;AAI1D;IAAA;QAEU,eAAU,GAAG,IAAI,aAAa,CAAQ,CAAC,CAAC,CAAC;QACjD,aAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC;KAsC3C;IApCC,wCAAQ,GAAR,UAAS,KAAY;QACnB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAC;IAED,0CAAU,GAAV,UAAW,IAAa;QAAxB,iBA+BC;QA9BC,IAAM,WAAW,GAAG,MAAM,CAAC,UAAC,EAAoB;gBAAlB,SAAS,eAAA;YAAc,OAAA,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,KAAK,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;QAAlC,CAAkC,CAAC,CAAC;QACzF,IAAM,YAAY,GAAG,UAAC,IAAI;YACxB,OAAA,MAAM,CAAC,UAAC,EAAiB;oBAAf,MAAM,YAAA;gBACd,OAAO,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC;YAC3D,CAAC,CAAC;QAFF,CAEE,CAAC;QAEL,IAAM,WAAW,GAAG,UAAC,OAA2C;YAC9D,OAAA,KAAI,CAAC,QAAQ,CAAC,IAAI,CAChB,WAAW,EACX,YAAY,CAAC,OAAO,CAAC,EACrB,GAAG,CAAC,UAAC,MAAM,IAAK,OAAA,MAAM,CAAC,OAAO,EAAd,CAAc,CAAC,CAChC;QAJD,CAIC,CAAC;QAEJ,IAAM,OAAO,GAAG,UAAC,EAAO,EAAE,IAAwC;YAChE,OAAA,KAAI,CAAC,QAAQ,CAAC,IAAI,CAChB,WAAW,EACX,YAAY,CAAC,IAAI,CAAC,EAClB,MAAM,CAAC,UAAC,MAAM,IAAK,OAAA,MAAM,CAAC,QAAQ,KAAK,EAAE,EAAtB,CAAsB,CAAC,EAC1C,GAAG,CAAC,UAAC,MAAM,IAAK,OAAA,MAAM,CAAC,OAAO,EAAd,CAAc,CAAC,CAChC;QALD,CAKC,CAAC;QAEJ,OAAO;YACL,IAAI,EAAE,WAAW,CAAC,UAAU,CAAC,GAAG,CAAC;YACjC,IAAI,EAAE,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC;YAClC,OAAO,EAAE,WAAW,CAAC,UAAC,MAAM,IAAK,OAAA,MAAM,KAAK,UAAU,CAAC,GAAG,IAAI,MAAM,KAAK,UAAU,CAAC,KAAK,EAAxD,CAAwD,CAAC;YAC1F,OAAO,EAAE,WAAW,CAAC,UAAU,CAAC,MAAM,CAAC;YACvC,SAAS,EAAE,UAAC,EAAO,IAAK,OAAA,OAAO,CAAC,EAAE,EAAE,UAAU,CAAC,GAAG,CAAC,EAA3B,CAA2B;YACnD,YAAY,EAAE,UAAC,EAAO,IAAK,OAAA,OAAO,CAAC,EAAE,EAAE,UAAC,MAAM,IAAK,OAAA,MAAM,KAAK,UAAU,CAAC,GAAG,IAAI,MAAM,KAAK,UAAU,CAAC,KAAK,EAAxD,CAAwD,CAAC,EAAjF,CAAiF;YAC5G,YAAY,EAAE,UAAC,EAAO,IAAK,OAAA,OAAO,CAAC,EAAE,EAAE,UAAU,CAAC,MAAM,CAAC,EAA9B,CAA8B;SAC1D,CAAC;IACJ,CAAC;8FAvCU,qBAAqB;iEAArB,qBAAqB,WAArB,qBAAqB,mBADR,MAAM;gCARhC;CAiDC,AAzCD,IAyCC;SAxCY,qBAAqB;kDAArB,qBAAqB;cADjC,UAAU;eAAC,EAAE,UAAU,EAAE,MAAM,EAAE","sourcesContent":["import { Injectable } from '@angular/core';\nimport { isFunction } from '@datorama/akita';\nimport { ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { HttpMethod } from './ng-entity-service-notifier';\n\nexport type Event = { method: HttpMethod; loading: boolean; storeName: string; entityId?: any };\n\n@Injectable({ providedIn: 'root' })\nexport class NgEntityServiceLoader {\n  private dispatcher = new ReplaySubject<Event>(1);\n  loading$ = this.dispatcher.asObservable();\n\n  dispatch(event: Event) {\n    this.dispatcher.next(event);\n  }\n\n  loadersFor(name?: string) {\n    const filterStore = filter(({ storeName }: Event) => (name ? storeName === name : true));\n    const filterMethod = (mthd) =>\n      filter(({ method }: Event) => {\n        return isFunction(mthd) ? mthd(method) : method === mthd;\n      });\n\n    const actionBased = (current: ((method) => boolean) | HttpMethod) =>\n      this.loading$.pipe(\n        filterStore,\n        filterMethod(current),\n        map((action) => action.loading)\n      );\n\n    const idBased = (id: any, mthd: ((method) => boolean) | HttpMethod) =>\n      this.loading$.pipe(\n        filterStore,\n        filterMethod(mthd),\n        filter((action) => action.entityId === id),\n        map((action) => action.loading)\n      );\n\n    return {\n      get$: actionBased(HttpMethod.GET),\n      add$: actionBased(HttpMethod.POST),\n      update$: actionBased((method) => method === HttpMethod.PUT || method === HttpMethod.PATCH),\n      delete$: actionBased(HttpMethod.DELETE),\n      getEntity: (id: any) => idBased(id, HttpMethod.GET),\n      updateEntity: (id: any) => idBased(id, (method) => method === HttpMethod.PUT || method === HttpMethod.PATCH),\n      deleteEntity: (id: any) => idBased(id, HttpMethod.DELETE),\n    };\n  }\n}\n"]}