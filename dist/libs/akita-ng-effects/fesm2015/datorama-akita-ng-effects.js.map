{"version":3,"file":"datorama-akita-ng-effects.js","sources":["ng://@datorama/akita-ng-effects/lib/actions.ts","ng://@datorama/akita-ng-effects/lib/tokens.ts","ng://@datorama/akita-ng-effects/lib/module-manager.service.ts","ng://@datorama/akita-ng-effects/lib/effect-root.module.ts","ng://@datorama/akita-ng-effects/lib/effect-feature.module.ts","ng://@datorama/akita-ng-effects/lib/akita-ng-effects.module.ts","ng://@datorama/akita-ng-effects/lib/effect.utils.ts","ng://@datorama/akita-ng-effects/lib/effect.decorator.ts","ng://@datorama/akita-ng-effects/lib/create-effect.util.ts","ng://@datorama/akita-ng-effects/datorama-akita-ng-effects.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { Action } from './types';\nimport { logAction } from '@datorama/akita';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class Actions extends Subject<Action> {\n  dispatch(value: Action): void {\n    this.logAction(value);\n    this.next(value);\n  }\n\n  logAction(value: Action): void {\n    const { type, ...props } = value;\n    const hasPayload = Object.getOwnPropertyNames(props).length > 0;\n    logAction(type, null, hasPayload ? props : null);\n  }\n}\n","import { InjectionToken, Type } from '@angular/core';\n\nexport const _ROOT_EFFECTS = new InjectionToken<Type<any>[]>('@datorama/akita Internal Root Effects');\n\nexport const ROOT_EFFECT_INSTANCES = new InjectionToken<Type<any>[]>('@datorama/akita Root Effects');\n\nexport const _FEATURE_EFFECTS = new InjectionToken<Type<any>[]>('@datorama/akita Internal Feature Effects');\n\nexport const FEATURE_EFFECT_INSTANCES = new InjectionToken<Type<any>[]>('@datorama/akita Feature Effects');\n","import { Injectable, OnDestroy, Type } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { Actions } from './actions';\nimport { Action, Effect } from './types';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ModuleManager implements OnDestroy {\n  effectInstanceSources = new WeakSet();\n  destroyEffects$ = new Subject();\n\n  constructor(private actions$: Actions) {}\n\n  subscribeToEffects(effectInstance: Type<any>): void {\n    for (let key in effectInstance) {\n      const property: Effect = effectInstance[key];\n      if (property.isEffect === true) {\n        property.pipe(takeUntil(this.destroyEffects$)).subscribe((actionOrSkip) => {\n          this.dispatchAction(property, actionOrSkip);\n        });\n      }\n    }\n  }\n\n  has(effect: Type<any>): boolean {\n    return this.effectInstanceSources.has(effect);\n  }\n\n  add(effect: Type<any>): void {\n    this.effectInstanceSources.add(effect);\n  }\n\n  private dispatchAction(property: Effect, actionOrSkip: Action | Record<any, any>) {\n    if (property.dispatchAction && this.checkAction(actionOrSkip)) {\n      this.actions$.dispatch(actionOrSkip);\n    }\n  }\n\n  private checkAction(action: Action | any): action is Action & Record<'type', any> {\n    if (action.type) {\n      return true;\n    }\n    throw new TypeError('Make sure to provide a valid action type or set the option {dispatch: false}');\n  }\n\n  ngOnDestroy(): void {\n    // modules aren't supposed to be destroyed; might not be needed\n    this.destroyEffects$.next();\n    this.effectInstanceSources = new WeakSet();\n  }\n}\n","import { Inject, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { ROOT_EFFECT_INSTANCES } from './tokens';\nimport { Actions } from './actions';\nimport { ModuleManager } from './module-manager.service';\n\n@NgModule()\nexport class EffectsRootModule {\n  constructor(private moduleManager: ModuleManager, private actions: Actions, @Inject(ROOT_EFFECT_INSTANCES) rootEffects: any[], @Optional() @SkipSelf() private parentModule?: EffectsRootModule) {\n    this.rootGuard();\n    rootEffects.forEach((effect) => this.moduleManager.subscribeToEffects(effect));\n  }\n\n  rootGuard() {\n    if (this.parentModule) {\n      throw new Error('EffectsRootModule is already loaded. Import it in the AppModule only');\n    }\n  }\n}\n","import { Inject, NgModule } from '@angular/core';\nimport { FEATURE_EFFECT_INSTANCES } from './tokens';\nimport { ModuleManager } from './module-manager.service';\n\n@NgModule()\nexport class EffectsFeatureModule {\n  constructor(private moduleManager: ModuleManager, @Inject(FEATURE_EFFECT_INSTANCES) featureEffects: any[]) {\n    featureEffects.forEach((group) =>\n      group.forEach((effect) => {\n        this.moduleManager.subscribeToEffects(effect);\n      })\n    );\n  }\n}\n","import { Injector, ModuleWithProviders, NgModule, Type } from '@angular/core';\nimport { _FEATURE_EFFECTS, _ROOT_EFFECTS, FEATURE_EFFECT_INSTANCES, ROOT_EFFECT_INSTANCES } from './tokens';\nimport { EffectsRootModule } from './effect-root.module';\nimport { Actions } from './actions';\nimport { EffectsFeatureModule } from './effect-feature.module';\nimport { ModuleManager } from './module-manager.service';\n\n@NgModule({})\nexport class AkitaNgEffectsModule {\n  static forRoot(rootEffects: Type<any>[] = []): ModuleWithProviders<EffectsRootModule> {\n    return {\n      ngModule: EffectsRootModule,\n      providers: [\n        ModuleManager,\n        Actions,\n        rootEffects,\n        {\n          provide: _ROOT_EFFECTS,\n          useValue: [rootEffects],\n        },\n        {\n          provide: ROOT_EFFECT_INSTANCES,\n          useFactory: createEffectInstances,\n          deps: [Injector, _ROOT_EFFECTS, ModuleManager],\n        },\n      ],\n    };\n  }\n\n  static forFeature(featureEffects: Type<any>[] = []): ModuleWithProviders<EffectsFeatureModule> {\n    return {\n      ngModule: EffectsFeatureModule,\n      providers: [\n        featureEffects,\n        {\n          provide: _FEATURE_EFFECTS,\n          useValue: featureEffects,\n          multi: true,\n        },\n        {\n          provide: FEATURE_EFFECT_INSTANCES,\n          multi: true,\n          useFactory: createEffectInstances,\n          deps: [Injector, _FEATURE_EFFECTS, ModuleManager],\n        },\n      ],\n    };\n  }\n}\n\nexport function createEffectInstances(injector: Injector, effectGroups: Type<any>[][], moduleManager: ModuleManager): any[] {\n  const mergedEffects: Type<any>[] = [];\n\n  for (const effectGroup of effectGroups) {\n    mergedEffects.push(...effectGroup);\n  }\n  // todo we shouldn't use a map to avoid registering the effects twice;\n  // fix the underlying issue for feature is called twice\n  const effectInstances = mergedEffects.reduce((acc, effect) => {\n    if (!moduleManager.has(effect)) {\n      moduleManager.add(effect);\n      acc.push(injector.get(effect));\n    }\n    return acc;\n  }, []);\n\n  return effectInstances;\n}\n","import { EffectOptions } from './types';\n\nexport function setMetadata(effect, propertyName, effectOptions: EffectOptions) {\n  Object.defineProperty(effect, 'isEffect', {\n    enumerable: true,\n    configurable: false,\n    writable: false,\n    value: true,\n  });\n  Object.defineProperty(effect, 'name', {\n    enumerable: true,\n    configurable: false,\n    writable: false,\n    value: propertyName,\n  });\n  Object.defineProperty(effect, 'dispatchAction', {\n    enumerable: true,\n    configurable: false,\n    writable: false,\n    value: effectOptions.dispatch,\n  });\n}\n","import { setMetadata } from './effect.utils';\nimport { EffectOptions } from './types';\n\nexport function Effect(options?: EffectOptions) {\n  options = {\n    dispatch: false,\n    ...options,\n  };\n\n  return function (classProto: any, propKey: string): any {\n    let returnValue;\n\n    Object.defineProperty(classProto, propKey, {\n      get: function () {\n        return returnValue;\n      },\n      set: function (value) {\n        setMetadata(value, propKey, options);\n        returnValue = value;\n      },\n      enumerable: true,\n    });\n  };\n}\n","import { Observable } from 'rxjs';\nimport { setMetadata } from './effect.utils';\nimport { EffectOptions } from './types';\n\nexport function createEffect<T>(actions$: () => Observable<T>, options?: EffectOptions): Observable<T> {\n  const effect = actions$();\n  options = {\n    dispatch: false,\n    ...options,\n  };\n  setMetadata(effect, null, options);\n\n  return effect;\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}